// <auto-generated />
using System;
using DashBoard.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DashBoard.API.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    partial class SqlServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DashBoard.API.Models.BenefitPlan", b =>
                {
                    b.Property<decimal>("BenefitPlanId")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Benefit_Plan_ID");

                    b.Property<decimal?>("Deductable")
                        .HasColumnType("numeric(18,0)");

                    b.Property<int?>("PercentageCoPay")
                        .HasColumnType("int")
                        .HasColumnName("Percentage_CoPay");

                    b.Property<string>("PlanName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Plan_Name");

                    b.HasKey("BenefitPlanId");

                    b.ToTable("Benefit_Plans");
                });

            modelBuilder.Entity("DashBoard.API.Models.EmergencyContact", b =>
                {
                    b.Property<decimal>("EmployeeId")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Employee_ID");

                    b.Property<string>("EmergencyContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Emergency_Contact_Name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Phone_Number");

                    b.Property<string>("Relationship")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_Employee_ID");

                    b.ToTable("Emergency_Contacts");
                });

            modelBuilder.Entity("DashBoard.API.Models.Employment", b =>
                {
                    b.Property<decimal>("EmployeeId")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Employee_ID");

                    b.Property<string>("EmploymentStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Employment_Status");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Hire_Date");

                    b.Property<DateTime?>("LastReviewDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_Review_Date");

                    b.Property<DateTime?>("RehireDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Rehire_Date");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Termination_Date");

                    b.Property<string>("WorkersCompCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Workers_Comp_Code");

                    b.HasKey("EmployeeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_Employee_ID")
                        .HasDatabaseName("IX_Employee_ID1");

                    b.ToTable("Employment");
                });

            modelBuilder.Entity("DashBoard.API.Models.JobHistory", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("ID");

                    b.Property<decimal?>("DepartmenCode")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Departmen_Code");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Division")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("EmployeeId")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Employee_ID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("End_Date");

                    b.Property<bool?>("HazardousTraining")
                        .HasColumnType("bit")
                        .HasColumnName("Hazardous_Training");

                    b.Property<decimal?>("HoursPerWeek")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Hours_per_Week");

                    b.Property<string>("JobCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Job_Category");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Job_Title");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PayPeriod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Pay_Period");

                    b.Property<decimal?>("SalaryType")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Salary_Type");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Start_Date");

                    b.Property<decimal?>("Supervisor")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_Employee_ID")
                        .HasDatabaseName("IX_Employee_ID2");

                    b.ToTable("Job_History");
                });

            modelBuilder.Entity("DashBoard.API.Models.Personal", b =>
                {
                    b.Property<decimal>("EmployeeId")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Employee_ID");

                    b.Property<string>("Address1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("BenefitPlans")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Benefit_Plans");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriversLicense")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Drivers_License");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ethnicity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("First_Name");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Last_Name");

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Marital_Status");

                    b.Property<string>("MiddleInitial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Middle_Initial");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Phone_Number");

                    b.Property<bool>("ShareholderStatus")
                        .HasColumnType("bit")
                        .HasColumnName("Shareholder_Status");

                    b.Property<string>("SocialSecurityNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Social_Security_Number");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Zip")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("EmployeeId");

                    b.HasIndex(new[] { "BenefitPlans" }, "IX_Benefit_Plans");

                    b.ToTable("Personal");
                });

            modelBuilder.Entity("DashBoard.API.Models.EmergencyContact", b =>
                {
                    b.HasOne("DashBoard.API.Models.Personal", "Employee")
                        .WithOne("EmergencyContact")
                        .HasForeignKey("DashBoard.API.Models.EmergencyContact", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DashBoard.API.Models.Employment", b =>
                {
                    b.HasOne("DashBoard.API.Models.Personal", "Employee")
                        .WithOne("Employment")
                        .HasForeignKey("DashBoard.API.Models.Employment", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DashBoard.API.Models.JobHistory", b =>
                {
                    b.HasOne("DashBoard.API.Models.Personal", "Employee")
                        .WithMany("JobHistories")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DashBoard.API.Models.Personal", b =>
                {
                    b.HasOne("DashBoard.API.Models.BenefitPlan", "BenefitPlansNavigation")
                        .WithMany("Personals")
                        .HasForeignKey("BenefitPlans");

                    b.Navigation("BenefitPlansNavigation");
                });

            modelBuilder.Entity("DashBoard.API.Models.BenefitPlan", b =>
                {
                    b.Navigation("Personals");
                });

            modelBuilder.Entity("DashBoard.API.Models.Personal", b =>
                {
                    b.Navigation("EmergencyContact");

                    b.Navigation("Employment");

                    b.Navigation("JobHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
